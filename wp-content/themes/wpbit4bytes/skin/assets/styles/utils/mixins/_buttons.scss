//Button single size item from map
@mixin button-size($key) {
  font-size: map_get($key, text-size);
  line-height: map_get($key, line-height);
  height: map_get($key, height);
}

//Buttons sizes items from map without breakpoints
@mixin button-sizes-simple($map: $button-size-map) {
  @each $key, $value in $map {
    @if $key == 'default' {
      @include button-size($value);
    }

    @else {
      &--size-#{$key} {
        @include button-size($value);
      }
    }
  }
}

//Buttons sizes items from map
@mixin button-sizes($map: $button-size-map) {
  $i: 0;

  @each $breakpoint, $breakpointMap in $map {
    @if $i == 0 {
      @include button-sizes-simple($breakpointMap);
    }

    @else {
      @include media(#{$breakpoint} up) {
        @include button-sizes-simple($breakpointMap);
      }
    }
    $i: $i + 1;
  }
}

//Button single color item from map
@mixin button-color($key) {
  $bg: map_get($key, bg);
  $text: map_get($key, text);
  $border: map_get($key, border);
  $bg-hover: map_get($key, bg-hover);
  $text-hover: map_get($key, text-hover);
  $border-hover: map_get($key, border-hover);

  background-color: $bg;
  color: $text;
  border-color: $border;

  .icon-animated-arrow__item {
    background-color: $text;
  }

  &:hover,
  &:active,
  &.is-active,
  &:focus {
    background-color: $bg-hover;
    color: $text-hover;
    border-color: $border-hover;

    .icon-animated-arrow__item {
      background-color: $text-hover;
    }
  }
}

//Buttons color items from map
@mixin button-colors($map: $button-color-map) {
  @each $key, $value in $map {
    @if $key == default {
      @include button-color($value);
    }

    @else {
      &--color-#{$key} {
        @include button-color($value);
      }
    }
  }
}
